def draw_tree(height: int, interval: int) -> None:
    """
        Draws a Christmas tree in a 2D table of size WIDTH * (HEIGHT + 2).
        Args:
            height: Height of the tree body (excluding star and trunk), must be >= 2.
            interval: Interval at which the decorations appear after one space, must be >= 1.
        """
    if height < 2:
        print("Height must be at least 2.")
        return
    if interval < 1:
        print(" Interval must be greater than 0.")

    # Calculate width (2 * height - 1) and total rows (height + 2 for star and trunk)
    width = 2 * height_int - 1
    total_height = height + 2
    mid = width // 2

    # create 2D list width * size representing table
    table = [[" " for _ in range(width)] for _ in range(height + 2)]

    # Add star (X) at the top center
    table[0][mid] = "X"

    # Add crown (^) below the star
    table[1][mid] = "^"

    # Set interval counter
    interval_counter = 0

    # Add tree body with decoration
    for row in range(2,height + 1):
        # stars = 2 * row - 1 -2  # Number of * characters in this row
        stars_counter = 0 # Reset counter for stars position between / \
        start_col = mid - row + 1 # Leftmost column for /
        end_col = mid + row - 1 # Rightmost column for \
        table[row][start_col] = "/" # Left edge
        table[row][end_col] = "\\" # Right edge
        for j in range(start_col + 1, end_col):  # Fill middle with *
            stars_counter += 1
            if stars_counter % 2 == 0:
                if interval_counter % interval == 0:
                    table[row][j] = "O"
                else:
                    table[row][j] = "*"
                interval_counter += 1

            else:
                table[row][j] = "*"

    # Add trunk (| |) at the bottom
    table[total_height - 1][mid - 1] = "|"
    table[total_height - 1][mid + 1] = "|"

    # Print the table
    for row in table:
        print("".join(row))


if __name__ == "__main__":
    print("Input a number for height of the Christmas tree and interval for decorations:")
    try:
        usr = input().split()
        if len(usr) != 2:
            print("Invalid input, must provide exactly two integers (height and interval).")
            exit(1)
        height_int = int(usr[0])
        interval_int = int(usr[1])
        # height_int = 4 # for testing
    except ValueError:
        print("Invalid input, must be an integer.")
        exit(1)

    draw_tree(height_int, interval_int)
